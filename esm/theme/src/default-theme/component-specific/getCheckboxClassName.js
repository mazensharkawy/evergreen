import { Themer } from '../../../../themer';
import memoizeClassName from '../utils/memoizeClassName';
import scales from '../foundational-styles/scales';
import { getPrimaryButtonStylesForIntent } from '../helpers';
var primaryStyle = getPrimaryButtonStylesForIntent();
var defaultAppearance = Themer.createCheckboxAppearance({
  base: {
    color: 'white',
    backgroundColor: 'white',
    backgroundImage: "linear-gradient(to top, ".concat(scales.neutral.N2A, ", white)"),
    boxShadow: "inset 0 0 0 1px ".concat(scales.neutral.N4A, ", inset 0 -1px 1px 0 ").concat(scales.neutral.N3A)
  },
  disabled: {
    cursor: 'not-allowed',
    boxShadow: "inset 0 0 0 1px ".concat(scales.neutral.N4A),
    backgroundColor: scales.neutral.N2A,
    backgroundImage: 'none'
  },
  hover: {
    backgroundImage: "linear-gradient(to top, ".concat(scales.neutral.N2A, ", ").concat(scales.neutral.N1A, ")"),
    boxShadow: "inset 0 0 0 1px ".concat(scales.neutral.N4A, ", inset 0 -1px 1px 0 ").concat(scales.neutral.N2A)
  },
  focus: {
    boxShadow: "0 0 0 2px ".concat(scales.blue.B4A, ", inset 0 0 0 1px ").concat(scales.neutral.N5A, ", inset 0 -1px 1px 0 ").concat(scales.neutral.N3A)
  },
  active: {
    backgroundImage: 'none',
    backgroundColor: scales.blue.B3A,
    boxShadow: "inset 0 0 0 1px ".concat(scales.blue.B5A)
  },
  checked: {
    color: 'white',
    backgroundImage: primaryStyle.linearGradient.base,
    boxShadow: "inset 0 0 0 1px ".concat(scales.neutral.N5A, ", inset 0 -1px 1px 0 ").concat(scales.neutral.N2A)
  },
  checkedHover: {
    color: 'white',
    backgroundImage: primaryStyle.linearGradient.hover,
    boxShadow: "inset 0 0 0 1px ".concat(scales.neutral.N5A, ", inset 0 -1px 1px 0 ").concat(scales.neutral.N2A)
  },
  checkedDisabled: {
    color: scales.neutral.N6A,
    backgroundImage: "linear-gradient(to top, ".concat(scales.neutral.N2A, ", ").concat(scales.neutral.N1A, ")"),
    boxShadow: "inset 0 0 0 1px ".concat(scales.neutral.N4A, ", inset 0 -1px 1px 0 ").concat(scales.neutral.N2A)
  },
  checkedActive: {
    color: 'white',
    backgroundImage: primaryStyle.linearGradient.active,
    boxShadow: "inset 0 0 0 1px ".concat(scales.neutral.N4A, ", inset 0 -1px 1px 0 ").concat(scales.neutral.N2A)
  }
});
/**
 * There is only a single appearance in the default theme.
 * @param {String} appearance.
 * @return {Object} the appearance of the checkbox.
 */

var getCheckboxAppearance = function getCheckboxAppearance() {
  return defaultAppearance;
};
/**
 * Get the className of a `Checkbox`.
 * @param {string} appearance
 * @return {string} the appearance class name.
 */


export default memoizeClassName(getCheckboxAppearance);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy90aGVtZS9zcmMvZGVmYXVsdC10aGVtZS9jb21wb25lbnQtc3BlY2lmaWMvZ2V0Q2hlY2tib3hDbGFzc05hbWUuanMiXSwibmFtZXMiOlsiVGhlbWVyIiwibWVtb2l6ZUNsYXNzTmFtZSIsInNjYWxlcyIsImdldFByaW1hcnlCdXR0b25TdHlsZXNGb3JJbnRlbnQiLCJwcmltYXJ5U3R5bGUiLCJkZWZhdWx0QXBwZWFyYW5jZSIsImNyZWF0ZUNoZWNrYm94QXBwZWFyYW5jZSIsImJhc2UiLCJjb2xvciIsImJhY2tncm91bmRDb2xvciIsImJhY2tncm91bmRJbWFnZSIsIm5ldXRyYWwiLCJOMkEiLCJib3hTaGFkb3ciLCJONEEiLCJOM0EiLCJkaXNhYmxlZCIsImN1cnNvciIsImhvdmVyIiwiTjFBIiwiZm9jdXMiLCJibHVlIiwiQjRBIiwiTjVBIiwiYWN0aXZlIiwiQjNBIiwiQjVBIiwiY2hlY2tlZCIsImxpbmVhckdyYWRpZW50IiwiY2hlY2tlZEhvdmVyIiwiY2hlY2tlZERpc2FibGVkIiwiTjZBIiwiY2hlY2tlZEFjdGl2ZSIsImdldENoZWNrYm94QXBwZWFyYW5jZSJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsTUFBVCxRQUF1QixvQkFBdkI7QUFDQSxPQUFPQyxnQkFBUCxNQUE2QiwyQkFBN0I7QUFDQSxPQUFPQyxNQUFQLE1BQW1CLCtCQUFuQjtBQUNBLFNBQVNDLCtCQUFULFFBQWdELFlBQWhEO0FBRUEsSUFBTUMsWUFBWSxHQUFHRCwrQkFBK0IsRUFBcEQ7QUFFQSxJQUFNRSxpQkFBaUIsR0FBR0wsTUFBTSxDQUFDTSx3QkFBUCxDQUFnQztBQUN4REMsRUFBQUEsSUFBSSxFQUFFO0FBQ0pDLElBQUFBLEtBQUssRUFBRSxPQURIO0FBRUpDLElBQUFBLGVBQWUsRUFBRSxPQUZiO0FBR0pDLElBQUFBLGVBQWUsb0NBQTZCUixNQUFNLENBQUNTLE9BQVAsQ0FBZUMsR0FBNUMsYUFIWDtBQUlKQyxJQUFBQSxTQUFTLDRC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O0FBQ0QsQ0FGRDtBQUlBOzs7Ozs7O0FBS0EsZUFBZUosZ0JBQWdCLENBQUNnQyxxQkFBRCxDQUEvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRoZW1lciB9IGZyb20gJy4uLy4uLy4uLy4uL3RoZW1lcidcbmltcG9ydCBtZW1vaXplQ2xhc3NOYW1lIGZyb20gJy4uL3V0aWxzL21lbW9pemVDbGFzc05hbWUnXG5pbXBvcnQgc2NhbGVzIGZyb20gJy4uL2ZvdW5kYXRpb25hbC1zdHlsZXMvc2NhbGVzJ1xuaW1wb3J0IHsgZ2V0UHJpbWFyeUJ1dHRvblN0eWxlc0ZvckludGVudCB9IGZyb20gJy4uL2hlbHBlcnMnXG5cbmNvbnN0IHByaW1hcnlTdHlsZSA9IGdldFByaW1hcnlCdXR0b25TdHlsZXNGb3JJbnRlbnQoKVxuXG5jb25zdCBkZWZhdWx0QXBwZWFyYW5jZSA9IFRoZW1lci5jcmVhdGVDaGVja2JveEFwcGVhcmFuY2Uoe1xuICBiYXNlOiB7XG4gICAgY29sb3I6ICd3aGl0ZScsXG4gICAgYmFja2dyb3VuZENvbG9yOiAnd2hpdGUnLFxuICAgIGJhY2tncm91bmRJbWFnZTogYGxpbmVhci1ncmFkaWVudCh0byB0b3AsICR7c2NhbGVzLm5ldXRyYWwuTjJBfSwgd2hpdGUpYCxcbiAgICBib3hTaGFkb3c6IGBpbnNldCAwIDAgMCAxcHggJHtzY2FsZXMubmV1dHJhbC5ONEF9LCBpbnNldCAwIC0xcHggMXB4IDAgJHtzY2FsZXMubmV1dHJhbC5OM0F9YFxuICB9LFxuICBkaXNhYmxlZDoge1xuICAgIGN1cnNvcjogJ25vdC1hbGxvd2VkJyxcbiAgICBib3hTaGFkb3c6IGBpbnNldCAwIDAgMCAxcHggJHtzY2FsZXMubmV1dHJhbC5ONEF9YCxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHNjYWxlcy5uZXV0cmFsLk4yQSxcbiAgICBiYWNrZ3JvdW5kSW1hZ2U6ICdub25lJ1xuICB9LFxuICBob3Zlcjoge1xuICAgIGJhY2tncm91bmRJbWFnZTogYGxpbmVhci1ncmFkaWVudCh0byB0b3AsICR7c2NhbGVzLm5ldXRyYWwuTjJBfSwgJHtzY2FsZXMubmV1dHJhbC5OMUF9KWAsXG4gICAgYm94U2hhZG93OiBgaW5zZXQgMCAwIDAgMXB4ICR7c2NhbGVzLm5ldXRyYWwuTjRBfSwgaW5zZXQgMCAtMXB4IDFweCAwICR7c2NhbGVzLm5ldXRyYWwuTjJBfWBcbiAgfSxcbiAgZm9jdXM6IHtcbiAgICBib3hTaGFkb3c6IGAwIDAgMCAycHggJHtzY2FsZXMuYmx1ZS5CNEF9LCBpbnNldCAwIDAgMCAxcHggJHtzY2FsZXMubmV1dHJhbC5ONUF9LCBpbnNldCAwIC0xcHggMXB4IDAgJHtzY2FsZXMubmV1dHJhbC5OM0F9YFxuICB9LFxuICBhY3RpdmU6IHtcbiAgICBiYWNrZ3JvdW5kSW1hZ2U6ICdub25lJyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHNjYWxlcy5ibHVlLkIzQSxcbiAgICBib3hTaGFkb3c6IGBpbnNldCAwIDAgMCAxcHggJHtzY2FsZXMuYmx1ZS5CNUF9YFxuICB9LFxuICBjaGVja2VkOiB7XG4gICAgY29sb3I6ICd3aGl0ZScsXG4gICAgYmFja2dyb3VuZEltYWdlOiBwcmltYXJ5U3R5bGUubGluZWFyR3JhZGllbnQuYmFzZSxcbiAgICBib3hTaGFkb3c6IGBpbnNldCAwIDAgMCAxcHggJHtzY2FsZXMubmV1dHJhbC5ONUF9LCBpbnNldCAwIC0xcHggMXB4IDAgJHtzY2FsZXMubmV1dHJhbC5OMkF9YFxuICB9LFxuICBjaGVja2VkSG92ZXI6IHtcbiAgICBjb2xvcjogJ3doaXRlJyxcbiAgICBiYWNrZ3JvdW5kSW1hZ2U6IHByaW1hcnlTdHlsZS5saW5lYXJHcmFkaWVudC5ob3ZlcixcbiAgICBib3hTaGFkb3c6IGBpbnNldCAwIDAgMCAxcHggJHtzY2FsZXMubmV1dHJhbC5ONUF9LCBpbnNldCAwIC0xcHggMXB4IDAgJHtzY2FsZXMubmV1dHJhbC5OMkF9YFxuICB9LFxuICBjaGVja2VkRGlzYWJsZWQ6IHtcbiAgICBjb2xvcjogc2NhbGVzLm5ldXRyYWwuTjZBLFxuICAgIGJhY2tncm91bmRJbWFnZTogYGxpbmVhci1ncmFkaWVudCh0byB0b3AsICR7c2NhbGVzLm5ldXRyYWwuTjJBfSwgJHtzY2FsZXMubmV1dHJhbC5OMUF9KWAsXG4gICAgYm94U2hhZG93OiBgaW5zZXQgMCAwIDAgMXB4ICR7c2NhbGVzLm5ldXRyYWwuTjRBfSwgaW5zZXQgMCAtMXB4IDFweCAwICR7c2NhbGVzLm5ldXRyYWwuTjJBfWBcbiAgfSxcbiAgY2hlY2tlZEFjdGl2ZToge1xuICAgIGNvbG9yOiAnd2hpdGUnLFxuICAgIGJhY2tncm91bmRJbWFnZTogcHJpbWFyeVN0eWxlLmxpbmVhckdyYWRpZW50LmFjdGl2ZSxcbiAgICBib3hTaGFkb3c6IGBpbnNldCAwIDAgMCAxcHggJHtzY2FsZXMubmV1dHJhbC5ONEF9LCBpbnNldCAwIC0xcHggMXB4IDAgJHtzY2FsZXMubmV1dHJhbC5OMkF9YFxuICB9XG59KVxuXG4vKipcbiAqIFRoZXJlIGlzIG9ubHkgYSBzaW5nbGUgYXBwZWFyYW5jZSBpbiB0aGUgZGVmYXVsdCB0aGVtZS5cbiAqIEBwYXJhbSB7U3RyaW5nfSBhcHBlYXJhbmNlLlxuICogQHJldHVybiB7T2JqZWN0fSB0aGUgYXBwZWFyYW5jZSBvZiB0aGUgY2hlY2tib3guXG4gKi9cbmNvbnN0IGdldENoZWNrYm94QXBwZWFyYW5jZSA9ICgpID0+IHtcbiAgcmV0dXJuIGRlZmF1bHRBcHBlYXJhbmNlXG59XG5cbi8qKlxuICogR2V0IHRoZSBjbGFzc05hbWUgb2YgYSBgQ2hlY2tib3hgLlxuICogQHBhcmFtIHtzdHJpbmd9IGFwcGVhcmFuY2VcbiAqIEByZXR1cm4ge3N0cmluZ30gdGhlIGFwcGVhcmFuY2UgY2xhc3MgbmFtZS5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgbWVtb2l6ZUNsYXNzTmFtZShnZXRDaGVja2JveEFwcGVhcmFuY2UpXG4iXX0=